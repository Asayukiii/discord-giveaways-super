"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DatabaseManager=void 0;const databaseType_enum_1=require("../../types/databaseType.enum"),GiveawaysError_1=require("../util/classes/GiveawaysError"),JSONParser_1=require("../util/classes/JSONParser"),Logger_1=require("../util/classes/Logger"),CacheManager_1=require("./CacheManager");class DatabaseManager{_cache;_logger;giveaways;db;databaseType;jsonParser;constructor(r){this._cache=new CacheManager_1.CacheManager,this._logger=new Logger_1.Logger(r.options.debug),this.giveaways=r,this.db=r.db,this.databaseType=r.options.database,this.jsonParser=null,this._init()}async _init(){this.isJSON()&&(this.jsonParser=new JSONParser_1.JSONParser(this.giveaways.options.connection.path)),this._logger.debug("Loading the cache..."),await this._loadCache()}async _debug(r,s,a,e=!0){try{const t=await a();return this.giveaways.options.debug&&e&&this._logger.debug(`Performed "${r}" operation on key "${s}".`),t}catch(a){return this.giveaways.options.debug&&e&&this._logger.error(`Failed to perform "${r}" operation on key "${s}": ${a.stack}`),null}}isJSON(){return this.giveaways.options.database==databaseType_enum_1.DatabaseType.JSON}isMongoDB(){return this.giveaways.options.database==databaseType_enum_1.DatabaseType.MONGODB}isEnmap(){return this.giveaways.options.database==databaseType_enum_1.DatabaseType.ENMAP}getKeys(r){const s=null==r?this.all():this.get(r);return Object.keys(s)}get(r){return this._cache.get(r)}async getFromDatabase(r){if(this.isJSON()){return await this.jsonParser.get(r)}if(this.isMongoDB()){return await this.db.get(r)}if(this.isEnmap()){return this.db.get(r)}return{}}fetch(r){return this.get(r)}has(r){return!!this.get(r)}includes(r){return this.has(r)}async set(r,s,a=!0){return this._debug("set",r,(async()=>{if(this._cache.set(r,s),this.isJSON()){return await this.jsonParser.set(r,s)}if(this.isMongoDB()){return await this.db.set(r,s)}if(this.isEnmap()){this.db.set(r,s);return this.db.get(r)}return{}}),a)}async clear(r=!0){return this._cache.clear(),this.giveaways.options.debug&&r&&this._logger.debug('Performed "clear" operation on all database.'),this.isJSON()?(await this.jsonParser.clearDatabase(),!0):this.isMongoDB()?(await this.db.clear(),!0):!!this.isEnmap()&&(this.db.deleteAll(),!0)}async deleteAll(){return this.giveaways.options.debug&&this._logger.debug('Performed "deleteAll" operation on all database.'),this.clear(!1)}async add(r,s){return this._debug("add",r,(async()=>{const a=this._cache.get(r);if(isNaN(a)||this._cache.set(r,a+s),this.isJSON()){const a=await this.jsonParser.get(r);if(isNaN(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("number",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return await this.jsonParser.set(r,a+s),!0}if(this.isMongoDB()){const a=await this.db.get(r);if(isNaN(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("number",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return await this.db.set(r,a+s),!0}if(this.isEnmap()){const a=this.db.get(r);if(isNaN(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("number",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return this.db.set(r,a+s),!0}return!1}))}async subtract(r,s){return this._debug("subtract",r,(async()=>{const a=this._cache.get(r);if(isNaN(a)||this._cache.set(r,a+s),this.isJSON()){const a=await this.jsonParser.get(r);if(isNaN(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("number",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return await this.jsonParser.set(r,a-s),!0}if(this.isMongoDB()){const a=await this.db.get(r);if(isNaN(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("number",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return await this.db.set(r,a-s),!0}if(this.isEnmap()){const a=this.db.get(r);if(isNaN(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("number",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return this.db.set(r,a-s),!0}return!1}))}async delete(r){return this._debug("delete",r,(async()=>(this._cache.delete(r),this.isJSON()?(await this.jsonParser.delete(r),!0):this.isMongoDB()?(await this.db.delete(r),!0):!!this.isEnmap()&&(this.db.delete(r),!0))))}async push(r,s){return this._debug("push",r,(async()=>{const a=this._cache.get(r)||[];if(Array.isArray(a)&&(a.push(s),this._cache.set(r,a)),this.isJSON()){const a=await this.jsonParser.get(r)||[];if(!Array.isArray(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return a.push(s),await this.jsonParser.set(r,a),!0}if(this.isMongoDB()){const a=await this.db.get(r)||[];if(!Array.isArray(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return a.push(s),await this.db.set(r,a),!0}if(this.isEnmap()){const a=this.db.get(r)||[];if(!Array.isArray(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return a.push(s),this.db.set(r,a),!0}return!1}))}async pull(r,s,a){return this._debug("pull",r,(async()=>{const e=this._cache.get(r)||[];if(Array.isArray(e)&&(e.splice(s,1,a),this._cache.set(r,e)),this.isJSON()){const e=await this.jsonParser.get(r)||[];if(!Array.isArray(e))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",e),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return e.splice(s,1,a),await this.jsonParser.set(r,e),!0}if(this.isMongoDB()){const e=await this.db.get(r)||[];if(!Array.isArray(e))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",e),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return e.splice(s,1,a),await this.db.set(r,e),!0}if(this.isEnmap()){const e=this.db.get(r)||[];if(!Array.isArray(e))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",e),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return e.splice(s,1,a),this.db.set(r,e),!0}return!1}))}async pop(r,s){return this._debug("pop",r,(async()=>{const a=this._cache.get(r)||[];if(Array.isArray(a)&&(a.splice(s,1),this._cache.set(r,a)),this.isJSON()){const a=await this.jsonParser.get(r)||[];if(!Array.isArray(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return a.splice(s,1),await this.jsonParser.set(r,a),!0}if(this.isMongoDB()){const a=await this.db.get(r)||[];if(!Array.isArray(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return a.splice(s,1),await this.db.set(r,a),!0}if(this.isEnmap()){const a=this.db.get(r)||[];if(!Array.isArray(a))throw new GiveawaysError_1.GiveawaysError(GiveawaysError_1.errorMessages.INVALID_TARGET_TYPE("array",a),GiveawaysError_1.GiveawaysErrorCodes.INVALID_TARGET_TYPE);return a.splice(s,1),this.db.set(r,a),!0}return!1}))}all(){return this._cache.getCacheObject()}async _allFromDatabase(){if(this.isJSON()){return await this.jsonParser.fetchDatabaseFile()}if(this.isMongoDB()){return await this.db.all()}if(this.isEnmap()){const r={};for(const s of this.db.keys()){const a=s.split(".");let e=r;for(let r=0;r<a.length;r++){const t=a[r];a.length-1===r?e[t]=this.db.get(s)||null:(e[t]||(e[t]={}),e=e[t])}}return r}return{}}async _loadCache(){const r=await this._allFromDatabase();for(const s in r){const a=r[s];this._cache.set(s,a)}}}exports.DatabaseManager=DatabaseManager;
